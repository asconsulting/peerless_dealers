<?php
 
/**
 * Generated By:
 * DCA Module Generator for Contao Open Source CMS
 *
 * Copyright (C) 2016 Andrew Stevens
 *
 * @package    DCA Generator
 * @link       http://andrewstevens.consulting
 * @license    http://opensource.org/licenses/lgpl-3.0.html
 */

 
 
namespace Contao;
 
/**
 * Class ModulePeerlessDealersSearch
 *
 * Front end module "Peerless Dealers List".
 */
 
class ModulePeerlessDealersSearch extends \Module
{
 
    /**
     * Template
     * @var string
     */
    protected $strTemplate = 'mod_peerless_dealers_search';
 
    /**
     * Display a wildcard in the back end
     * @return string
     */
    public function generate()
    {
        if (TL_MODE == 'BE')
        {
            $objTemplate = new \BackendTemplate('be_wildcard');
 
            $objTemplate->wildcard = '### ' . utf8_strtoupper($GLOBALS['TL_LANG']['FMD']['peerless_dealers_list'][0]) . ' ###';
            $objTemplate->title = $this->headline;
            $objTemplate->id = $this->id;
            $objTemplate->link = $this->name;
            $objTemplate->href = 'contao/main.php?do=themes&table=tl_module&act=edit&id=' . $this->id;
 
            return $objTemplate->parse();
        }
 
        return parent::generate();
    }
 
 
    /**
     * Generate the module
     */
    protected function compile()
    {
		
		$objItem = $this->Database->prepare(
							"SELECT
									id,
									tstamp,
									alias,
									name,
									address,
									phone,
									phone_2,
									fax,
									email,
									url,
									description,
									latitude,
									longitude,
									published
								FROM
									tl_peerless_dealers		
								WHERE 
									published >= 1"
								)->execute();
	 
		// Return if no pending items were found
		if (!$objItem->numRows)
		{
			$this->Template->empty = 'No Records Found';
			return;
		}


		$arrItems = array();
 
		// Generate List
		while ($objItem->next())
		{
			$arrItem = array(
				'id'		=> $objItem->id,
				'alias'		=> $objItem->alias,
				'tstamp'	=> $objItem->tstamp,
				'timetamp'	=> \Date::parse(\Config::get('datimFormat'), $objItem->tstamp),
				'published' => $objItem->published
			);
			
			if ($this->jumpTo) {
				$objTarget = $this->objModel->getRelated('jumpTo');
				$arrItem['link'] = $this->generateFrontendUrl($objTarget->row()) .'?alias=' .$objItem->alias;
			}
			
				$arrItem['name'] = $objItem->name;
				$arrItem['address'] = $objItem->address;
				$arrItem['phone'] = $objItem->phone;
				$arrItem['phone_2'] = $objItem->phone_2;
				$arrItem['fax'] = $objItem->fax;
				$arrItem['email'] = $objItem->email;
				$arrItem['url'] = $objItem->url;
				$arrItem['description'] = $objItem->description;
				$arrItem['latitude'] = $objItem->latitude;
				$arrItem['longitude'] = $objItem->longitude;


			$strItemTemplate = ($this->peerless_dealers_customItemTpl != '' ? $this->peerless_dealers_customItemTpl : 'item_peerless_dealers_generated');
			$objTemplate = new \FrontendTemplate($strItemTemplate);
			$objTemplate->item = $arrItem;
			$arrItems[] = $objTemplate->parse();
		}

		$this->Template->items = $arrItems;
	
	}

} 
